{"version":3,"file":"index.js","mappings":";;;;;;;;;;;CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,WAAY,GAAIH,GACG,iBAAZC,QACdA,QAAkB,SAAID,IAEtBD,EAAe,SAAIC,GACpB,CATD,CASGK,MAAM,IACT,M,aCTA,IAAIC,EAAsB,CCA1BA,EAAwB,CAACL,EAASM,KACjC,IAAI,IAAIC,KAAOD,EACXD,EAAoBG,EAAEF,EAAYC,KAASF,EAAoBG,EAAER,EAASO,IAC5EE,OAAOC,eAAeV,EAASO,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAE1E,ECNDF,EAAwB,CAACQ,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,GCClFT,EAAyBL,IACH,oBAAXkB,QAA0BA,OAAOC,aAC1CV,OAAOC,eAAeV,EAASkB,OAAOC,YAAa,CAAEC,MAAO,WAE7DX,OAAOC,eAAeV,EAAS,aAAc,CAAEoB,OAAO,GAAO,G,s4BCLvD,IAAMC,EAAW,WAIpB,SAAAA,IACI,G,4FADUC,CAAA,KAAAD,GACNA,EAAYE,SACZ,OAAOF,EAAYE,SAEvBF,EAAYE,SAAWC,IAC3B,C,UAOC,O,EAPAH,E,EAWA,EAAAd,IAAA,eAAAa,MAVD,SAAoBK,GAChBD,KAAKC,MAAQA,CACjB,GAAC,CAAAlB,IAAA,cAAAa,MAED,WACI,OAAO,IAAIC,CACf,K,EAPC,EAAAd,IAAA,cAAAa,MASD,WACI,OAAOC,EAAYI,KACvB,M,8EAJCJ,CAAA,CAhBmB,GAqBvBK,EArBYL,EAAW,mBAAAK,EAAXL,EAAW,SAEG,GCUpB,IAAMM,EAAU,SAACC,GACpB,IAAMC,EACK,IADLA,EAEM,IAENC,EAAM,GAAHC,OAAMV,EAAYW,cAAcC,cChBV,wBADJ,0BDiBmE,qBAAAF,OAAoBG,KAAKC,KAAKC,UAAUR,KAEtI,OAAO,IAAIS,SAAQ,SAACC,EAASC,GACzB,IACI,IAAMC,EAAQC,OAAOC,KAAKZ,EAAK,QAAS,SAAFC,OAAWF,EAAiB,YAAAE,OAAWF,EAAkB,SAAAE,OAASY,OAAOC,OAAO,EAAIf,EAAmB,EAAE,UAAAE,OAAUY,OAAOE,MAAM,EAAIhB,EAAkB,IAE5LY,OAAOK,iBAAiB,WAAW,SAASC,GACpCA,EAAMC,SAAWR,GACjBF,EAAQS,EAAME,KAEtB,GACJ,CAAE,MAAOC,GACLX,EAAOW,EACX,CACJ,GACJ,E,UNtBA","sources":["webpack://Powerise/webpack/universalModuleDefinition","webpack://Powerise/webpack/bootstrap","webpack://Powerise/webpack/runtime/define property getters","webpack://Powerise/webpack/runtime/hasOwnProperty shorthand","webpack://Powerise/webpack/runtime/make namespace object","webpack://Powerise/./src/lib/config/environment.ts","webpack://Powerise/./src/lib/auth/connect/index.ts","webpack://Powerise/./src/lib/config/powerise.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Powerise\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Powerise\"] = factory();\n\telse\n\t\troot[\"Powerise\"] = factory();\n})(self, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export class Environment {\n    private static instance: Environment;\n    private static debug = false;\n\n    constructor() {\n        if (Environment.instance) {\n            return Environment.instance;\n        }\n        Environment.instance = this;\n    }\n    static setDebugMode(debug: boolean): void {\n        this.debug = debug;\n    }\n\n    static getInstance(): Environment {\n        return new Environment();\n    }\n\n    isDebugMode(): boolean {\n        return Environment.debug;\n    }\n}","import {ConnectionSuccessfulPayload, ConnectPayload} from './types';\nimport {POWERISE_DEV_DOMAIN, POWERISE_DOMAIN} from '../../config/powerise';\nimport {Environment} from '../../config/environment';\n\n/**\n * Gets the item at the specified index of an array\n *\n * @since v0.1.0\n * @category auth\n * @param {ConnectPayload} payload\n * @returns {Promise<ConnectionSuccessfulPayload>}\n */\nexport const connect = (payload: ConnectPayload): Promise<ConnectionSuccessfulPayload> => {\n    const popupConfig = {\n        width: 520,\n        height: 635,\n    }\n    const url = `${Environment.getInstance().isDebugMode() ? POWERISE_DEV_DOMAIN : POWERISE_DOMAIN}/connect?payload=${btoa(JSON.stringify(payload))}`\n\n    return new Promise((resolve, reject) => {\n        try {\n            const popup = window.open(url, 'Popup', `width=${popupConfig.width},height=${popupConfig.height},top=${(screen.height/2)-(popupConfig.height/2)},left=${(screen.width/2)-(popupConfig.width/2)}`);\n\n            window.addEventListener('message', function(event) {\n                if (event.source === popup) {\n                    resolve(event.data);\n                }\n            });\n        } catch (e) {\n            reject(e);\n        }\n    });\n}","export const POWERISE_DOMAIN = 'https://app.powerise.io';\nexport const POWERISE_DEV_DOMAIN = 'http://localhost:3000';"],"names":["root","factory","exports","module","define","amd","self","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","Environment","_classCallCheck","instance","this","debug","_defineProperty","connect","payload","popupConfig","url","concat","getInstance","isDebugMode","btoa","JSON","stringify","Promise","resolve","reject","popup","window","open","screen","height","width","addEventListener","event","source","data","e"],"sourceRoot":""}